---
# Create cluster with nodes

# Make default variables available in hostvars
- name: cluster | Set default quorum role
  set_fact: scale_cluster_quorum={{ scale_cluster_quorum }}
  when: hostvars[inventory_hostname].scale_cluster_quorum is undefined

- name: cluster | Set default manager role
  set_fact: scale_cluster_manager={{ scale_cluster_manager }}
  when: hostvars[inventory_hostname].scale_cluster_manager is undefined

# Cleanup groups from previous play
- meta: refresh_inventory

#
# Inspect existing cluster and inventory
#
- name: cluster | Find existing cluster
  shell: "/usr/lpp/mmfs/bin/mmlscluster -Y | grep -v HEADER | grep clusterSummary | cut -d ':' -f 8"
  register: scale_cluster_clusterId
  changed_when: false
  failed_when: false

- name: cluster | Find existing cluster members
  add_host:
    name: "{{ item }}"
    groups: scale_cluster_members
  when:
    - hostvars[item].scale_cluster_clusterId.stdout
  with_items: "{{ ansible_play_hosts }}"
  changed_when: false

- name: cluster | Find new cluster candidates
  add_host:
    name: "{{ item }}"
    groups: scale_cluster_candidates
  when:
    - not hostvars[item].scale_cluster_clusterId.stdout
    - hostvars[item].scale_cluster_clusterId.stderr
  with_items: "{{ ansible_play_hosts }}"
  changed_when: false

# TODO: use group_by for node roles?
# https://github.com/ansible/ansible/issues/6912
- name: cluster | Find quorum nodes
  add_host:
    name: "{{ item }}"
    groups: scale_cluster_quorum_nodes
  when: hostvars[item].scale_cluster_quorum | bool
  with_items: "{{ ansible_play_hosts }}"
  changed_when: false

#
# Assign default quorum nodes
#
- name: cluster | Assign default quorum nodes
  set_fact: scale_cluster_quorum=true
  when: groups['scale_cluster_quorum_nodes'] is undefined
  with_sequence: start=1 end={{ [ansible_play_hosts | length, 7] | min }}
  run_once: true
  delegate_to: "{{ ansible_play_hosts[item | int - 1] }}"
  delegate_facts: true

#
# Create new cluster
#
- block:  ## when: groups['scale_cluster_members'] is undefined
    - name: cluster | Prepare new cluster NodeFile
      template: src=NodeFile.j2 dest=/var/tmp/NodeFile
      changed_when: false

    - name: cluster | Create new cluster
      command: /usr/lpp/mmfs/bin/mmcrcluster -N /var/tmp/NodeFile -C {{ scale_cluster_clustername }}
      notify: accept-licenses

    - name: cluster | Cleanup new cluster NodeFile
      file: path=/var/tmp/NodeFile state=absent
      changed_when: false
  when:
    - groups['scale_cluster_candidates'] is defined
    - groups['scale_cluster_members'] is undefined
  run_once: true
  delegate_to: "{{ groups['scale_cluster_candidates'].0 }}"

#
# Add nodes to existing cluster
#
- block:  ## when: groups['scale_cluster_members'] is defined
    - block:  ## when: groups['scale_cluster_candidates'] is defined
        - name: cluster | Prepare existing cluster NodeFile
          template: src=NodeFile.j2 dest=/var/tmp/NodeFile
          changed_when: false

        - name: cluster | Add new node(s) to cluster
          command: /usr/lpp/mmfs/bin/mmaddnode -N /var/tmp/NodeFile
          notify: accept-licenses

        - name: cluster | Cleanup existing cluster NodeFile
          file: path=/var/tmp/NodeFile state=absent
          changed_when: false
      when: groups['scale_cluster_candidates'] is defined

#
# Change node roles of existing cluster members
#
    - name: cluster | Prepare existing cluster ChangeFile
      template: src=ChangeFile.j2 dest=/var/tmp/ChangeFile
      register: scale_storage_changefile

    - block:  ## when: scale_storage_changefile is changed
        - name: cluster | Accept server license on quorum nodes
          vars:
            quorum_nodes: "{{ groups['scale_cluster_quorum_nodes'] | map('extract', hostvars, 'scale_daemon_nodename') | list }}"
          command: "/usr/lpp/mmfs/bin/mmchlicense server --accept -N {{ quorum_nodes | join(',') }}"

        - name: cluster | Change roles of existing node(s)
          command: /usr/lpp/mmfs/bin/mmchnode -S /var/tmp/ChangeFile
          notify: accept-licenses
      when: scale_storage_changefile is changed
  when: groups['scale_cluster_members'] is defined
  run_once: true
  delegate_to: "{{ groups['scale_cluster_members'].0 }}"

- meta: flush_handlers

#
# Prepare stanzas for next run
#
- name: cluster | Find new cluster members
  add_host:
    name: "{{ item }}"
    groups: scale_cluster_members
  with_items: "{{ ansible_play_hosts }}"
  changed_when: false

- name: cluster | Prepare existing cluster ChangeFile for next run
  template: src=ChangeFile.j2 dest=/var/tmp/ChangeFile
  when: groups['scale_cluster_candidates'] is defined
  run_once: true
  delegate_to: "{{ groups['scale_cluster_members'].0 }}"
  changed_when: false
