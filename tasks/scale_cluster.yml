---
# Create cluster with nodes

- name: cluster | Set default daemon nodename
  set_fact:
    scale_cluster_daemon_nodename: "{{ scale_cluster_daemon_nodename }}"
  when: hostvars[inventory_hostname].scale_cluster_daemon_nodename is undefined

- name: cluster | Find existing cluster
  shell: "/usr/lpp/mmfs/bin/mmlscluster -Y | grep -v HEADER | grep clusterSummary | cut -d ':' -f 8"
  register: scale_cluster_clusterId
  changed_when: false
  failed_when: false

- name: cluster | Find existing cluster members
  add_host:
    name: "{{ item }}"
    groups: scale_cluster_members
  when:
    - hostvars[item].scale_cluster_clusterId.stdout
  with_items: "{{ ansible_play_hosts }}"
  changed_when: false

- name: cluster | Find new cluster candidates
  add_host:
    name: "{{ item }}"
    groups: scale_cluster_candidates
  when:
    - not hostvars[item].scale_cluster_clusterId.stdout
    - hostvars[item].scale_cluster_clusterId.stderr
  with_items: "{{ ansible_play_hosts }}"
  changed_when: false

#
# Create new cluster
#
- block:
    - name: cluster | Prepare NodeFile
      template: src=NodeFile.j2 dest=/var/tmp/NodeFile

    - name: cluster | Create new cluster
      command: /usr/lpp/mmfs/bin/mmcrcluster -N /var/tmp/NodeFile -C {{ scale_cluster_clustername }}
      notify: accept-licenses
  when:
    - groups['scale_cluster_members'] is undefined
    - groups['scale_cluster_candidates'] is defined
  run_once: true
  delegate_to: "{{ groups.scale_cluster_candidates.0 }}"

#
# Extend existing cluster
#
- block:
    - name: cluster | Prepare NodeFile
      template: src=NodeFile.j2 dest=/var/tmp/NodeFile

    - name: cluster | Add new node(s) to cluster
      command: /usr/lpp/mmfs/bin/mmaddnode -N /var/tmp/NodeFile
      notify: accept-licenses
  when:
    - groups['scale_cluster_members'] is defined
    - groups['scale_cluster_candidates'] is defined
  run_once: true
  delegate_to: "{{ groups.scale_cluster_members.0 }}"


# mmstartup -a
