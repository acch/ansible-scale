---
# Define nodeclasses and configuration parameters

#
# Inspect existing nodeclasses and inventory
#
- name: config | Group hosts by defined nodeclasses
  group_by:
    key: scale_nodeclass_{{ item }}
  when: scale_nodeclass is defined
  with_items: "{{ scale_nodeclass }}"

- block:  ## run_once: true
    - name: config | Find existing nodeclasses
      shell: "/usr/lpp/mmfs/bin/mmlsnodeclass --user -Y | grep -v HEADER | cut -d ':' -f 7"
      register: scale_config_existing_nodeclasses
      changed_when: false
      failed_when: false

    - name: config | Find defined nodeclasses
      set_fact:
        scale_config_nodeclasses: "{{ scale_config_nodeclasses | default([]) + [ item ] }}"
      with_items: "{{ groups | select('match', '^scale_nodeclass_.*') | list }}"

    - name: config | Prepare NodeClass files
      vars:
        current_nodeclass: "{{ item | regex_replace('^scale_nodeclass_', '') }}"
      template: src=NodeClass.j2 dest=/var/tmp/NodeClass.{{ current_nodeclass }}
      register: scale_config_nodeclassfile
      with_items: "{{ scale_config_nodeclasses | default([]) }}"

#
# Create new nodeclasses
#
    - name: config | Create new nodeclasses
      vars:
        current_nodeclass: "{{ item.item | regex_replace('^scale_nodeclass_', '') }}"
      command: /usr/lpp/mmfs/bin/mmcrnodeclass {{ current_nodeclass }} -N /var/tmp/NodeClass.{{ current_nodeclass }}
      when:
        - not current_nodeclass in scale_config_existing_nodeclasses.stdout_lines
        - item | changed
        - item.size > 1
      with_items: "{{ scale_config_nodeclassfile.results }}"

#
# Replace existing nodeclasses
#
    - name: config | Replace existing nodeclasses
      vars:
        current_nodeclass: "{{ item.item | regex_replace('^scale_nodeclass_', '') }}"
      command: /usr/lpp/mmfs/bin/mmchnodeclass {{ current_nodeclass }} replace -N /var/tmp/NodeClass.{{ current_nodeclass }}
      when:
        - current_nodeclass in scale_config_existing_nodeclasses.stdout_lines
        - item | changed
        - item.size > 1
      with_items: "{{ scale_config_nodeclassfile.results }}"
  run_once: true
