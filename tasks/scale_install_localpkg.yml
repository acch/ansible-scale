---
# Local package installation method

- name: Check installation package on local machine
  assert:
    that:
      - scale_install_localpkg_path is defined
      - scale_install_localpkg_path | is_file
    msg: "Please set the variable 'scale_install_localpkg_path' to point to the local installation package!"
  run_once: true

- name: Check for defined temporary directory
  assert:
    that: scale_install_localpkg_tmpdir is defined
    msg: "Please set the variable 'scale_install_localpkg_tmpdir' to point to a temporary directory on the remote system!"
  run_once: true

- name: Stat temporary directory
  stat: path={{ scale_install_localpkg_tmpdir }}
  register: tmp_dir

- name: Check for temporary directory
  assert:
    that: tmp_dir.stat.isdir is defined and tmp_dir.stat.isdir
    msg: "Please set the variable 'scale_install_localpkg_tmpdir' to point to a temporary directory on the remote system!"

- name: Stat checksum file
  local_action: stat path={{ scale_install_localpkg_path }}.md5
  register: md5_file
  run_once: true

- name: Read checksum from file
  set_fact:
    md5_ref: "{{ lookup('file', scale_install_localpkg_path + '.md5') }}"
  when: md5_file.stat.exists
  run_once: true

- name: Compute checksum from installation package
  local_action: stat path="{{ scale_install_localpkg_path }}"
  register: md5_sum
  when: md5_file.stat.exists
  run_once: true

- name: Compare checksums
  assert:
    that:
      - md5_ref.strip().split().0 == md5_sum.stat.md5
    msg: "Checksums don't match. Please check integritiy of your local installation package!"
  when: md5_file.stat.exists
  run_once: true

- name: Stat extracted packages on node
  stat: path=/usr/lpp/mmfs/{{ scale_version }}/gpfs_rpms
  register: gpfs_rpms

- name: Copy installation package to node
  copy:
    src: "{{ scale_install_localpkg_path }}"
    dest: "{{ scale_install_localpkg_tmpdir }}"
    mode: a+x
  when: not gpfs_rpms.stat.exists

- name: Extract installation package on node
  command: "{{ scale_install_localpkg_tmpdir + '/' + scale_install_localpkg_path | basename + ' --silent' }}"
  args:
    creates: /usr/lpp/mmfs/{{ scale_version }}/gpfs_rpms

- name: Delete installation package from node
  file:
    path: "{{ scale_install_localpkg_tmpdir + '/' + scale_install_localpkg_path | basename }}"
    state: absent

...
