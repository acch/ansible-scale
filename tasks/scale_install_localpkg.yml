---
# Local package installation method

- name: install | Stat local installation package
  local_action: stat path={{ scale_install_localpkg_path }}
  register: scale_install_localpkg
  run_once: true

- name: install | Check local installation package
  assert:
    that: scale_install_localpkg.stat.exists
    msg: "Please set the variable 'scale_install_localpkg_path' to point to the local installation package!"
  run_once: true

# Optionally, verify package checksum

- name: install | Stat checksum file
  local_action: stat path={{ scale_install_localpkg_path }}.md5
  register: scale_install_md5_file
  run_once: true

- name: install | Read checksum from file
  set_fact:
    scale_install_md5_sum: "{{ lookup('file', scale_install_localpkg_path + '.md5') }}"
  when: scale_install_md5_file.stat.exists
  run_once: true

- name: install | Compare checksums
  assert:
    that: scale_install_md5_sum.strip().split().0 == scale_install_localpkg.stat.md5
    msg: "Checksums don't match. Please check integritiy of your local installation package!"
  when: scale_install_md5_file.stat.exists
  run_once: true

# Check temporary directory

- name: install | Stat temporary directory
  stat: path={{ scale_install_localpkg_tmpdir }}
  register: scale_install_tmp_dir

- name: install | Check temporary directory
  assert:
    that:
      - scale_install_tmp_dir.stat.isdir is defined
      - scale_install_tmp_dir.stat.isdir
    msg: "Please set the variable 'scale_install_localpkg_tmpdir' to point to a temporary directory on the remote system!"

# Copy installation package

- name: install | Stat extracted packages
  stat: path=/usr/lpp/mmfs/{{ scale_version }}/gpfs_rpms
  register: scale_install_gpfs_rpms

- name: install | Copy installation package to node
  copy:
    src: "{{ scale_install_localpkg_path }}"
    dest: "{{ scale_install_localpkg_tmpdir }}"
    mode: a+x
  when: not scale_install_gpfs_rpms.stat.exists

# Extract installation package

- name: install | Extract installation package
  command: "{{ scale_install_localpkg_tmpdir + '/' + scale_install_localpkg_path | basename + ' --silent' }}"
  args:
    creates: /usr/lpp/mmfs/{{ scale_version }}/gpfs_rpms

# Delete installation package

- name: install | Delete installation package from node
  file:
    path: "{{ scale_install_localpkg_tmpdir + '/' + scale_install_localpkg_path | basename }}"
    state: absent
