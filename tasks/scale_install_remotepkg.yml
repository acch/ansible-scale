---
# Remote package installation method

- name: Check for defined installation package
  assert:
    that: scale_install_remotepkg_path is defined
    msg: "Please set the variable 'scale_install_remotepkg_path' to point to the remote installation package!"
  run_once: true

- name: Stat installation package
  stat: path={{ scale_install_remotepkg_path }}
  register: install_pkg

- name: Check remote installation package
  assert:
    that: install_pkg.stat.exists
    msg: "Please set the variable 'scale_install_remotepkg_path' to point to the remote installation package!"

- name: Stat checksum file
  stat: path={{ scale_install_remotepkg_path }}.md5
  register: md5_file

- name: Read checksum from file
  set_fact:
    md5_sum: "{{ lookup('file', scale_install_remotepkg_path + '.md5') }}"
  when: md5_file.stat.exists

- name: Compare checksums
  assert:
    that:
      - md5_sum.strip().split().0 == install_pkg.stat.md5
    msg: "Checksums don't match. Please check integritiy of your local installation package!"
  when: md5_file.stat.exists

- name: Extract installation package on node
  command: "{{ scale_install_remotepkg_path + ' --silent' }}"
  args:
    creates: /usr/lpp/mmfs/{{ scale_version }}/gpfs_rpms

...
